import { minifyHTMLLiterals } from "minify-html-literals";
import { readFile } from "node:fs/promises";
function minifyHTMLLiteralsPlugin(options) {
  const { filter = /\.[jt]s$/, ...minifyOptions } = options ?? {};
  return {
    name: "minifyHTMLLiterals",
    setup(build) {
      const cache = /* @__PURE__ */ new Map();
      build.onLoad({ filter }, async ({ path }) => {
        const loader = path.match(/c?tsx?$/) ? "ts" : "js";
        const input = await readFile(path, "utf8");
        const cached = cache.get(path);
        if (cached?.source === input)
          return cached.output;
        else {
          const result = minifyHTMLLiterals(input, minifyOptions) ?? void 0;
          const contents = result && `${result.code}
//# sourceMappingURL=${result.map?.toUrl()}`;
          const output = result && { contents, loader };
          cache.set(path, { input, output });
          return output;
        }
      });
    }
  };
}
export {
  minifyHTMLLiteralsPlugin
};
//# sourceMappingURL=esbuild-plugin-minify-html-literals.js.map
